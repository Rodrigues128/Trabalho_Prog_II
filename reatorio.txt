ALUNO: Paulo Henrique Rodrigues Corrêa  
DISCIPLINA: Algoritmos e Programação II  
PROFESSORA: Graziela Santos de Araujo  
TRABALHO: Sistema de Vendas - Produtos++

OBJETIVO DO RELATÓRIO:
Este relatório tem por finalidade registrar que o desenvolvimento do sistema seguiu rigorosamente as especificações definidas no edital do trabalho prático, bem como destacar as funcionalidades implementadas, a organização adotada e eventuais extensões além do escopo proposto.

ESTRUTURA ADOTADA:
- O programa foi implementado na linguagem C/C++.
- A função `main()` está presente apenas no arquivo `main.cpp`, contendo exclusivamente o menu e chamadas de funções.
- Todas as funcionalidades estão modularizadas em arquivos `.cpp`, com suas respectivas declarações centralizadas no cabeçalho `header.h`.
- As mensagens visuais (prints informativos) foram organizadas no arquivo `messages.cpp`.
- Os dados de produtos são armazenados em vetor e ordenados por nome utilizando o algoritmo Merge Sort.
- As vendas são armazenadas em uma lista encadeada (`sales_cell`), e cada venda possui uma sublista encadeada de itens vendidos (`celula`), conforme exigido.

FUNCIONALIDADES OBRIGATÓRIAS IMPLEMENTADAS:
✔️ Importação de arquivo com estoque inicial  
✔️ Cadastro de vendas com controle de estoque  
✔️ Verificação da disponibilidade de produtos no momento da venda  
✔️ Armazenamento da data, hora e CPF de cada venda  
✔️ Listagem de vendas por data  
✔️ Alteração de estoque e preço dos produtos  
✔️ Remoção de produtos não vendidos  
✔️ Geração dos arquivos `vendasDDMMYYYY.txt` e atualização do arquivo original de produtos  
✔️ Menu com cinco opções, com tratamento de entrada  
✔️ Separação clara da `main` das funcionalidades

FUNCIONALIDADES ADICIONAIS IMPLEMENTADAS:
Além das funcionalidades exigidas, foram implementadas as seguintes **melhorias e extensões**:

1. 🎨 **Interface colorida com ANSI Escape Codes**  
   - Todas as mensagens do sistema usam cores para tornar a interface mais amigável.

2. 🔐 **Formatação do CPF com máscara**  
   - O CPF é digitado como número puro e automaticamente formatado para o padrão `000.000.000-00`.

3. 🛒 **Compra parcial em caso de estoque insuficiente**  
   - O sistema permite que o cliente aceite comprar apenas a quantidade disponível em estoque, ao invés de cancelar a venda.

4. 🔎 **Consulta detalhada de compras por CPF**  
   - Após listar as vendas de uma data, o usuário pode buscar as compras realizadas por um determinado CPF.

5. 📐 **Formatação automática dos nomes de produtos com alinhamento**  
   - Nomes de produtos são ajustados dinamicamente para manter o alinhamento nas tabelas exibidas no terminal.

6. 📁 **Menu de arquivos de entrada pré-definidos**  
   - Ao iniciar o sistema, o usuário pode escolher entre arquivos padrão (`5_produtos.txt`, `20_produtos.txt`, etc.) sem digitar manualmente.

COMPILADOR UTILIZADO:
- GCC (g++) com a flag `-Wall` para verificação de warnings. O código compila sem erros ou avisos.

ALTERAÇÕES NO FLUXO:
❌ Nenhuma alteração prejudicial ao fluxo original foi realizada.  
✅ Todas as extensões respeitam a lógica central do sistema e agregam valor à experiência do usuário.

ARQUIVOS INCLUÍDOS NA ENTREGA:
- `main.cpp`
- `header.h`
- Arquivos `.cpp` das funcionalidades
- `README.md`
- Arquivos de entrada (`/products`)
- Este relatório (`relatorio.txt`)

OBSERVAÇÃO FINAL:
O sistema foi testado e está funcionando corretamente, com foco em clareza, modularização e experiência do usuário. As funcionalidades extras demonstram proatividade no desenvolvimento além do mínimo exigido.

Campo Grande, MS – Junho de 2025

Paulo Henrique Rodrigues Corrêa